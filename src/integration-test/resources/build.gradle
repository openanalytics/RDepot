task restore {
    doLast{
        exec {
            executable "docker"
            args "exec", "oa-rdepot-app", "/bin/bash", "-c", "rm -rf /opt/rdepot/repositories; rm -rf /opt/rdepot/generated; mkdir -p /opt/rdepot/repositories; mkdir -p /opt/rdepot/new; mkdir -p /opt/rdepot/generated; cp -fr /opt/testSourceFiles/info/* /opt/rdepot/repositories; cp -fr /opt/testGenerated/repository/* /opt/rdepot/generated; cp -fr /opt/newFiles/new/* /opt/rdepot/new"
        }

        exec {
            executable "docker"
            args "exec", "oa-rdepot-db", "su", "-", "postgres", "-c", "psql rdepot -c 'TRUNCATE public.user_event, public.package_event, public.package_maintainer_event, public.repository_event, public.repository_maintainer_event, public.submission_event, public.submission, public.repository_maintainer, public.package_maintainer, public.package, public.repository, public.api_token, public.user'; psql rdepot < /opt/sql_files/rdepot.sql"
        }		

        exec {
            executable "docker"
            args "exec", "oa-rdepot-repo", "/bin/sh", "-c", "rm -r /opt/rdepot/*; cp -rf /opt/testServer/* /opt/rdepot"
        }	

        println "Files restored"
    }
}

task restoreDeclarative {
	doLast {	
		exec {
            executable "docker"
            args "exec", "oa-rdepot-db", "su", "-", "postgres", "-c", "dropdb declarative; createdb declarative; psql declarative < /opt/declarative_ready.sql"
        }
        
        exec {
            executable "docker"
            args "exec", "oa-rdepot-db", "su", "-", "root", "-c", "rm -f /opt/declarative_ready.sql"
        }
        
        exec {
            executable "docker"
            args "exec", "oa-rdepot-app-declarative", "/bin/bash", "-c", "rm -rf /opt/rdepot/repositories; rm -rf /opt/rdepot/new; rm -rf /opt/rdepot/generated; mkdir -p /opt/rdepot/generated"
        }
        
        println "Declarative restored"
	}
}

task backupDeclarative {
	doLast {	
		exec {
            executable "docker"
            args "exec", "oa-rdepot-db", "su", "-", "root", "-c", "pg_dump -U postgres declarative > /opt/declarative_ready.sql"
        }
    }	
}

task wait {
    doLast{ task -> sleep(10 * 1000) }
}

task removeSources(type: Delete) {
    delete 'itestGenerated', 'itestNewFiles', 'itestPackages', 'itestServer', 'itestSourceFiles', 'itestPdf'
}

task checkServer {
	doLast{
        exec {
            executable "docker"
            args "exec", "oa-rdepot-repo", "/bin/sh", "-c", "cd /opt/rdepot/testrepo2/src/contrib/Archive/accrued/"
        }
    }
}

task checkServerDeclarative {
	doLast {
		exec {
			executable "docker"
			args "exec", "oa-rdepot-repo", "/bin/bash", "-c", "cd /opt/rdepot/A/"
		}
	}
}

task checkServerInDeclarativeIfNotPublished {
	doLast {
		exec {
			executable "docker"
			args "exec", "oa-rdepot-repo", "/bin/bash", "-c", "cd /opt/rdepot/D/"
		}
	}
}

task checkOnServerIfRepositoryWithOnlyOnePackageDoesNotHaveArchive {
	doLast{
        exec {
            executable "docker"
            args "exec", "oa-rdepot-repo", "/bin/sh", "-c", "cd /opt/rdepot/testrepo2/src/contrib/Archive/visdat/"
        }
    }
}

task checkIfSourceOfPackageExistsInFilesystem {
	doLast{
		exec {
			executable "docker"
			args "exec", "oa-rdepot-app", "/bin/bash", "-c", "cd /opt/rdepot/repositories/8/*/visdat/"
		}
	}
}

task checkIfSymbolicLinkWasCreated {
	doLast{
		exec {
			executable "docker"
			args "exec", "oa-rdepot-app", "/bin/bash", "-c", "cd /opt/rdepot/generated/8/current/src/"
		}
	}
}

task checkIfSnapshotWasCreated {
	doLast {
		exec {
			executable "docker"
			args "exec", "oa-rdepot-app", "/bin/bash", "-c", "cd /opt/rdepot/generated/5/"
		}
	}
}

task checkIfSnapshotWasCreatedDeclarative {
	doLast {
		exec {
			executable "docker"
			args "exec", "oa-rdepot-app-declarative", "/bin/bash", "-c", "cd /opt/rdepot/generated/2/"
		}
	}
}
