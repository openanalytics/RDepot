buildscript {
    repositories {
    	mavenCentral()
    	maven {
     		url "https://plugins.gradle.org/m2/"
    	}
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.5.12"
        classpath("io.spring.gradle:dependency-management-plugin:1.0.14.RELEASE")
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
}

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

group = 'eu.openanalytics'
version = rootProject.version
sourceCompatibility = 11
targetCompatibility = 11

bootJar {
	enabled = false
}

jar {
	enabled = true
	from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
    	attributes (
    		'Implementation-Version': version
    	)
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

def globalConf = rootProject.ext

repositories {
  	mavenCentral()
   	jcenter()
}

dependencies {    
    implementation project(':rdepot-base')
    testImplementation project(':rdepot-base')
    
    testImplementation project(':rdepot-base').sourceSets.test.output
    testImplementation project(':rdepot-base').sourceSets.main.output
    
    testImplementation project(':rdepot-base').sourceSets.test.allSource
    testImplementation project(':rdepot-base').sourceSets.main.allSource        
    
    Map<String, String> dependencies = globalConf.commonDependencies
    
    implementation dependencies.jacksonAnnotations
    implementation dependencies.javaxPersistanceApi
    implementation dependencies.sbStarterWeb
    implementation dependencies.hateoas
    implementation dependencies.dataJpa
    implementation dependencies.auth0
    implementation dependencies.apacheLang3
    implementation dependencies.secLdap
    implementation dependencies.jsoup
    implementation dependencies.apacheCommons
    implementation dependencies.gson
    implementation dependencies.commonsCollections4
    implementation dependencies.commonsIO
    implementation dependencies.jakartaJsonApi
    implementation dependencies.jakartaJsonProvider
    implementation dependencies.jacksonJSR353
    implementation dependencies.apacheJohnzon
  
	testImplementation dependencies.sbStarterTest
	testImplementation dependencies.secTest
	testImplementation dependencies.jerseyHk2
	testImplementation dependencies.httpComponents
	testImplementation dependencies.httpComponentsTest	
	testImplementation dependencies.junit5Engine
	testImplementation dependencies.junit5Api
	testImplementation dependencies.junit5Params
	//testImplementation dependencies.junitVintage
}

test {
	useJUnitPlatform()
}

task copyMessagesForUnitTests(type: Copy) {    
    from "../app/src/main/resources"
    include "i18n/messages*"
    into "src/test/resources"    
    doLast { task -> println "messages copied" }
}

task removeMessages(type: Delete) {
    delete 'src/test/resources/i18n'
}

test.finalizedBy('removeMessages')
tasks.findByName('test').dependsOn copyMessagesForUnitTests

