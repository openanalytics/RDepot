/**
 * R Depot
 *
 * Copyright (C) 2012-2022 Open Analytics NV
 *
 * ===========================================================================
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the Apache License as published by
 * The Apache Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Apache License for more details.
 *
 * You should have received a copy of the Apache License
 * along with this program.  If not, see <http://www.apache.org/licenses/>
 */
package eu.openanalytics.rdepot.model;
// Generated Jun 24, 2013 12:33:03 PM by Hibernate Tools 4.0.0


import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;

import eu.openanalytics.rdepot.api.v2.dto.EntityDto;
import eu.openanalytics.rdepot.api.v2.dto.RSubmissionDto;

/**
 * Submission generated by hbm2java
 */
@Entity
@Table(name="submission"
    ,schema="public"
)
public class Submission  implements java.io.Serializable, IEntity<Submission>
{
     /**
	 *
	 */
	private static final long serialVersionUID = 1528085596442084682L;
	private int id;
    private User user;
    private Package packageBag;
    private String changes;
    private boolean accepted = false;
    private boolean deleted = false;
    private Set<SubmissionEvent> submissionEvents = new HashSet<SubmissionEvent>(0);

    public Submission()
    {
    }


    public Submission(int id, User user, Package packageBag, boolean accepted, boolean deleted)
    {
        this.id = id;
        this.user = user;
        this.packageBag = packageBag;
        this.accepted = accepted;
        this.deleted = deleted;
    }

    public Submission(int id, User user, Package packageBag, boolean accepted, boolean deleted, String changes)
    {
       this.id = id;
       this.user = user;
       this.packageBag = packageBag;
       this.accepted = accepted;
       this.changes = changes;
       this.deleted = deleted;
    }

    public Submission(int id, User user, Package packageBag, boolean accepted,
    		boolean deleted, String changes, Set<SubmissionEvent> submissionEvents)
    {
       this.id = id;
       this.user = user;
       this.packageBag = packageBag;
       this.accepted = accepted;
       this.changes = changes;
       this.submissionEvents = submissionEvents;
       this.deleted = deleted;
    }

    public Submission(int id, User user, Package packageBag, boolean accepted,
    		boolean deleted, Set<SubmissionEvent> submissionEvents)
    {
       this.id = id;
       this.user = user;
       this.packageBag = packageBag;
       this.accepted = accepted;
       this.submissionEvents = submissionEvents;
       this.deleted = deleted;
    }

    @Id
    @Column(name="id", unique=true, nullable=false)
	@GeneratedValue(strategy=GenerationType.IDENTITY)
    public int getId()
    {
        return this.id;
    }

    public void setId(int id)
    {
        this.id = id;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="submitter_id", nullable=false)
	//@JsonManagedReference(value="user-submissions")
    @JsonIgnore
    public User getUser()
    {
        return this.user;
    }

    public void setUser(User user)
    {
        this.user = user;
    }

    @ManyToOne(fetch=FetchType.EAGER, cascade = CascadeType.REMOVE)
    @JoinColumn(name="package_id", nullable=false)
	//@JsonManagedReference(value="package-submissions")
    @JsonIgnore
    public Package getPackage()
    {
        return this.packageBag;
    }

    public void setPackage(Package packageBag)
    {
        this.packageBag = packageBag;
    }

    @Column(name="changes")
    public String getChanges()
    {
        return this.changes;
    }

    public void setChanges(String changes)
    {
        this.changes = changes;
    }

    @Column(name="accepted", nullable=false)
	public boolean isAccepted()
    {
		return accepted;
	}


	public void setAccepted(boolean accepted)
	{
		this.accepted = accepted;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "submission")
	//@JsonBackReference(value="submission-events")
	@JsonIgnore
	public Set<SubmissionEvent> getSubmissionEvents()
	{
		return this.submissionEvents;
	}

	public void setSubmissionEvents(Set<SubmissionEvent>submissionEvents)
	{
		this.submissionEvents = submissionEvents;
	}

	@Column(name = "deleted", nullable = false)
	public boolean isDeleted()
	{
		return this.deleted;
	}

	public void setDeleted(boolean deleted)
	{
		this.deleted = deleted;
	}

	public String toString()
	{
		String string = this.packageBag.getName() + " " + this.packageBag.getVersion();
		// if(this.changes != null && this.changes.trim() != "")
		//	string += ": " + this.changes;
		return string;
 	}


	@Override
	public EntityDto<Submission> createDto() {
		return new RSubmissionDto(this);
	}

}




