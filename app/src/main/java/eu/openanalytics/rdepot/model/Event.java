/**
 * R Depot
 *
 * Copyright (C) 2012-2022 Open Analytics NV
 *
 * ===========================================================================
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the Apache License as published by
 * The Apache Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Apache License for more details.
 *
 * You should have received a copy of the Apache License
 * along with this program.  If not, see <http://www.apache.org/licenses/>
 */
package eu.openanalytics.rdepot.model;

// Generated Jun 24, 2013 12:33:03 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Role generated by hbm2java
 */
@Entity
@Table(name = "event", schema = "public")
public class Event implements java.io.Serializable
{

	/**
	 * 
	 */
	private static final long serialVersionUID = -1071848133594721525L;
	private int id;
	private String value;
	private Set<PackageEvent> packageEvents = new HashSet<PackageEvent>(0);
	private Set<RepositoryEvent> repositoryEvents = new HashSet<RepositoryEvent>(0);
	private Set<PackageMaintainerEvent> packageMaintainerEvents = new HashSet<PackageMaintainerEvent>(0);
	private Set<RepositoryMaintainerEvent> repositoryMaintainerEvents = new HashSet<RepositoryMaintainerEvent>(0);
	private Set<SubmissionEvent> submissionEvents = new HashSet<SubmissionEvent>(0);
	private Set<UserEvent> userEvents = new HashSet<UserEvent>(0);

	public Event()
	{
	}

	public Event(int id, String value)
	{
		this.id = id;
		this.value = value;
	}
	
	public Event(int id, String value, Set<PackageEvent> packageEvents, Set<RepositoryEvent> repositoryEvents,
			Set<PackageMaintainerEvent> packageMaintainerEvents, Set<RepositoryMaintainerEvent> repositoryMaintainerEvents,
			Set<SubmissionEvent> submissionEvents, Set<UserEvent> userEvents)
	{
		this.id = id;
		this.value = value;
		this.packageEvents = packageEvents;
		this.repositoryEvents = repositoryEvents;
		this.packageMaintainerEvents = packageMaintainerEvents;
		this.repositoryMaintainerEvents = repositoryMaintainerEvents;
		this.submissionEvents = submissionEvents;
		this.userEvents = userEvents;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId()
	{
		return this.id;
	}

	public void setId(int id)
	{
		this.id = id;
	}

	@Column(name = "value", unique = true, nullable = false)
	public String getValue()
	{
		return this.value;
	}

	public void setValue(String value)
	{
		this.value = value;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "event")
	//@JsonBackReference(value="event-package-events")
	public Set<PackageEvent> getPackageEvents()
	{
		return this.packageEvents;
	}

	public void setPackageEvents(Set<PackageEvent> packageEvents)
	{
		this.packageEvents = packageEvents;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "event")
	//@JsonBackReference(value="event-repository-events")
	public Set<RepositoryEvent> getRepositoryEvents()
	{
		return this.repositoryEvents;
	}

	public void setRepositoryEvents(Set<RepositoryEvent> repositoryEvents)
	{
		this.repositoryEvents = repositoryEvents;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "event")
	//@JsonBackReference(value="event-package-maintainer-events")
	public Set<PackageMaintainerEvent> getPackageMaintainerEvents()
	{
		return this.packageMaintainerEvents;
	}

	public void setPackageMaintainerEvents(Set<PackageMaintainerEvent> packageMaintainerEvents)
	{
		this.packageMaintainerEvents = packageMaintainerEvents;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "event")
	//@JsonBackReference(value="event-repository-maintainer-events")
	public Set<RepositoryMaintainerEvent> getRepositoryMaintainerEvents()
	{
		return this.repositoryMaintainerEvents;
	}

	public void setRepositoryMaintainerEvents(Set<RepositoryMaintainerEvent> repositoryMaintainerEvents)
	{
		this.repositoryMaintainerEvents = repositoryMaintainerEvents;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "event")
	//@JsonBackReference(value="event-submission-events")
	public Set<SubmissionEvent> getSubmissionEvents()
	{
		return this.submissionEvents;
	}

	public void setSubmissionEvents(Set<SubmissionEvent>submissionEvents)
	{
		this.submissionEvents = submissionEvents;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "event")
	//@JsonIdentityInfo(generator = ObjectIdGenerators.IntSequenceGenerator.class, property = "@id")
	//@JsonBackReference(value="event-user-events")
	public Set<UserEvent> getUserEvents()
	{
		return this.userEvents;
	}

	public void setUserEvents(Set<UserEvent> userEvents)
	{
		this.userEvents = userEvents;
	}

}
