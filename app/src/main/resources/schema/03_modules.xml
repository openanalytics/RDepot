<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog dbchangelog-4.0.xsd">
        
    <changeSet id="03_01_update_package" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
    			<tableExists tableName="rpackage" schemaName="public"/>
    		</not>    		
    	</preConditions>
    	<addColumn tableName="package" schemaName="public">
    		<column name="dtype" type="text"></column>
    	</addColumn>
    	<update tableName="package" schemaName="public">
    		<column name="dtype" value="RPackage"/>
    	</update>
    	<addNotNullConstraint tableName="package" schemaName="public" columnName="dtype"/>
    </changeSet>
        
    <changeSet id="03_02_update_submission" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
    			<columnExists tableName="submission" schemaName="public" columnName="state"/>
    		</not>
    	</preConditions>
    	<addColumn tableName="submission" schemaName="public">
    		<column name="state" type="text"></column>
    	</addColumn>
    	<update tableName="submission" schemaName="public">
    		<column name="state" value="rejected"/>
    	</update>
    	<addNotNullConstraint tableName="submission" schemaName="public" columnName="state"/>
    	<sql>
    	UPDATE public.submission 
    		SET state = q.state 
    		FROM (
    			SELECT CASE WHEN sub.accepted = true THEN 'ACCEPTED' 
    				WHEN sub.accepted = false AND sub.deleted = false THEN 'WAITING' 
    				WHEN sub.accepted = false AND sub.deleted = true AND se.event_id = 2 AND sub.submitter_id = se.changed_by THEN 'CANCELLED' 
    				WHEN sub.accepted = false AND sub.deleted = true AND se.event_id = 2 AND sub.submitter_id != se.changed_by THEN 'REJECTED' 
    			END as state, sub.id, sub.accepted, sub.deleted, sub.submitter_id, se.id as se_id, event_id, changed_by 
    			FROM public.submission sub 
    			JOIN (select s1.id, s1.event_id, s1.changed_by, s1.submission_id 
    				FROM public.submission_event s1 
    				JOIN (select submission_id, max(id) as id from public.submission_event GROUP BY submission_id) s2 ON s1.id = s2.id) se ON sub.id = se.submission_id
   				) as q WHERE q.id = submission.id;</sql>
   		<dropColumn tableName="submission" schemaName="public" columnName="accepted"></dropColumn>   		
    </changeSet>
    
    <changeSet id="03_03_update_role" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
    			<columnExists tableName="role" schemaName="public" columnName="deleted"/>
    		</not>
    	</preConditions>
    	<addColumn tableName="role" schemaName="public">
    		<column name="deleted" type="boolean" defaultValue="false"></column>
    	</addColumn>
    	<update tableName="role" schemaName="public">
    		<column name="deleted" value="false"/>
    	</update>
    	<addNotNullConstraint tableName="package" schemaName="public" columnName="dtype"/>
    </changeSet>
    
    <changeSet id="03_04_update_user" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
    			<columnExists tableName="user" schemaName="public" columnName="created_on"/>
    		</not>
    	</preConditions>
    	<addColumn tableName="user" schemaName="public">
    		<column name="created_on" type="date" defaultValueDate="now()"></column>
    	</addColumn>
    	<update tableName="user" schemaName="public">
    		<column name="created_on" value="01-01-1970"/>
    	</update>
    	<addNotNullConstraint tableName="user" schemaName="public" columnName="created_on"/>
    </changeSet>    
        
	<changeSet id="03_05_rpackage" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
            	<tableExists tableName="rpackage" schemaName="public"/>
            </not>  
    	</preConditions>
    	<createTable tableName="rpackage" schemaName="public">
    		<column  name="id"  type="integer">
            	<constraints primaryKey="true"/>
            </column>
    		<column  name="depends"  type="text">
            	<constraints nullable="true"/>
            </column>
            <column  name="imports"  type="text">
            	<constraints nullable="true"/>
            </column>
            <column  name="suggests"  type="text">
            	<constraints nullable="true"/>
            </column>
            <column  name="system_requirements"  type="text">
            	<constraints nullable="true"/>
            </column>
            <column  name="license"  type="text">
            	<constraints nullable="false"/>
            </column>
            <column  name="md5sum"  type="text">
            	<constraints nullable="true"/>
            </column> 
    	</createTable>
    	<sql>INSERT INTO public.rpackage(id, depends, imports, suggests, system_requirements, license, md5sum) 
    	SELECT id, depends, imports, suggests, system_requirements, license, md5sum FROM public.package;</sql>
    </changeSet>            
    
    <changeSet id="03_06_clear_package_columns" author="pgleska">
    	<dropColumn tableName="package" schemaName="public"><column name="depends"/></dropColumn>
    	<dropColumn tableName="package" schemaName="public"><column name="imports"/></dropColumn>
    	<dropColumn tableName="package" schemaName="public"><column name="suggests"/></dropColumn>
    	<dropColumn tableName="package" schemaName="public"><column name="system_requirements"/></dropColumn>
    	<dropColumn tableName="package" schemaName="public"><column name="license"/></dropColumn>
    	<dropColumn tableName="package" schemaName="public"><column name="md5sum"/></dropColumn>
    </changeSet> 
    
    <changeSet id="03_07_update_repository" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
    			<tableExists tableName="rrepository" schemaName="public"/>
    		</not>    		
    	</preConditions>
    	<addColumn tableName="repository" schemaName="public">
    		<column name="dtype" type="text"/>
    	</addColumn>
    	<update tableName="repository" schemaName="public">
    		<column name="dtype" value="RRepository"/>
    	</update>
    	<addNotNullConstraint tableName="repository" schemaName="public" columnName="dtype"/>
    </changeSet>
    
    <changeSet  id="03_08_rrepository_table"  author="pgleska">  
        <preConditions  onFail="MARK_RAN">  
            <not>
            	<tableExists tableName="rrepository" schemaName="public"/>
            </not>  
        </preConditions>  
        <createTable  tableName="rrepository" schemaName="public">  
            <column  name="id"  type="integer">
            	<constraints primaryKey="true"/>
            </column>        
        </createTable>          
        <sql>INSERT INTO public.rrepository(id)	SELECT id FROM public.repository;</sql>
    </changeSet>          
    
    <changeSet id="03_09_changed_variable_table" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
            	<tableExists tableName="changed_variable" schemaName="public"/>
            </not> 
        </preConditions>
    	<createTable  tableName="changed_variable" schemaName="public">  
            <column name="id" type="integer" autoIncrement="true" startWith="1" incrementBy="1">
            	<constraints primaryKey="true"/>
            </column>
            <column  name="changed_variable"  type="character varying(16)">
            	<constraints nullable="false"/>
            </column>   
            <column  name="value_before"  type="text">
            	<constraints nullable="false" />
            </column>
            <column  name="value_after"  type="text">
            	<constraints nullable="false" />
          	</column>
          	<column  name="newsfeed_event_id"  type="integer">
            	<constraints nullable="false" />
          	</column> 
          	<column  name="deleted"  type="boolean" defaultValue="false">
            	<constraints nullable="false" />
          	</column>         	
        </createTable>  
        <rollback/>
    </changeSet>
    
    <changeSet id="03_10_newsfeed_event_table" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
            	<tableExists tableName="newsfeed_event" schemaName="public"/>
            </not> 
        </preConditions>
    	<createTable  tableName="newsfeed_event" schemaName="public">  
            <column name="id" type="integer" autoIncrement="true" startWith="1" incrementBy="1">
            	<constraints primaryKey="true"/>
            </column>
            <column  name="time"  type="time with time zone" defaultValueDate="now()">
            	<constraints nullable="false"/>
            </column>   
            <column  name="date"  type="date" defaultValueDate="now()">
            	<constraints nullable="false" />
            </column>
            <column  name="newsfeed_event_type"  type="character varying(16)">
            	<constraints nullable="false" />
          	</column>
          	<column  name="author_id"  type="integer">
            	<constraints nullable="true" />
          	</column>
          	<column  name="related_packagemaintainer_id"  type="integer">
            	<constraints nullable="true" />
          	</column>
          	<column  name="related_repositorymaintainer_id"  type="integer">
            	<constraints nullable="true" />
          	</column>
          	<column  name="related_user_id"  type="integer">
            	<constraints nullable="true" />
          	</column>
          	<column  name="related_submission_id"  type="integer">
            	<constraints nullable="true" />
          	</column>
          	<column  name="related_repository_id"  type="integer">
            	<constraints nullable="true" />
          	</column>
          	<column  name="related_package_id"  type="integer">
            	<constraints nullable="true" />
          	</column>
          	<column  name="deleted"  type="boolean" defaultValue="false">
            	<constraints nullable="false" />
          	</column>
        </createTable>
        <sql>
    		CREATE SEQUENCE temporal_sequence START 100;

			ALTER TABLE public.submission_event ADD COLUMN temp_seq bigint;
			ALTER TABLE public.user_event ADD COLUMN temp_seq bigint;
			ALTER TABLE public.package_event ADD COLUMN temp_seq bigint;
			ALTER TABLE public.package_maintainer_event ADD COLUMN temp_seq bigint;
			ALTER TABLE public.repository_event ADD COLUMN temp_seq bigint;
			ALTER TABLE public.repository_maintainer_event ADD COLUMN temp_seq bigint;
			
			UPDATE public.submission_event SET temp_seq = nextval('temporal_sequence');
			UPDATE public.user_event SET temp_seq = nextval('temporal_sequence');
			UPDATE public.package_event SET temp_seq = nextval('temporal_sequence');
			UPDATE public.package_maintainer_event SET temp_seq = nextval('temporal_sequence');
			UPDATE public.repository_event SET temp_seq = nextval('temporal_sequence');
			UPDATE public.repository_maintainer_event SET temp_seq = nextval('temporal_sequence');
			
			ALTER TABLE public.newsfeed_event ADD COLUMN event_id integer;
			ALTER TABLE public.newsfeed_event ADD COLUMN temp_seq bigint;
			
			ALTER TABLE public.changed_variable ADD COLUMN temp_seq bigint;
			
			INSERT INTO
				public.newsfeed_event(time, date, newsfeed_event_type, author_id, related_submission_id, deleted, event_id, temp_seq)
			SELECT
				time, date, 'unknown', changed_by, submission_id, false, event_id, temp_seq 
			FROM public.submission_event;
				
			INSERT INTO 
				public.changed_variable (changed_variable, value_before, value_after, newsfeed_event_id, deleted, temp_seq) 
			SELECT 
				changed_variable, value_before, value_after, 1, false, temp_seq 
			FROM public.submission_event;						
			
			INSERT INTO
				public.newsfeed_event(time, date, newsfeed_event_type, author_id, related_user_id, deleted, event_id, temp_seq)
			SELECT
				time, date, 'unknown', changed_by, user_id, false, event_id, temp_seq 
			FROM public.user_event;
				
			INSERT INTO 
				public.changed_variable (changed_variable, value_before, value_after, newsfeed_event_id, deleted, temp_seq) 
			SELECT 
				changed_variable, value_before, value_after, 1, false, temp_seq 
			FROM public.user_event;						
			
			INSERT INTO
				public.newsfeed_event(time, date, newsfeed_event_type, author_id, related_package_id, deleted, event_id, temp_seq)
			SELECT
				time, date, 'unknown', changed_by, package_id, false, event_id, temp_seq 
			FROM public.package_event;
				
			INSERT INTO 
				public.changed_variable (changed_variable, value_before, value_after, newsfeed_event_id, deleted, temp_seq) 
			SELECT 
				changed_variable, value_before, value_after, 1, false, temp_seq 
			FROM public.package_event;						
			
			INSERT INTO
				public.newsfeed_event(time, date, newsfeed_event_type, author_id, related_packagemaintainer_id, deleted, event_id, temp_seq)
			SELECT
				time, date, 'unknown', changed_by, package_maintainer_id, false, event_id, temp_seq 
			FROM public.package_maintainer_event;
				
			INSERT INTO 
				public.changed_variable (changed_variable, value_before, value_after, newsfeed_event_id, deleted, temp_seq) 
			SELECT 
				changed_variable, value_before, value_after, 1, false, temp_seq 
			FROM public.package_maintainer_event;						
			
			INSERT INTO
				public.newsfeed_event(time, date, newsfeed_event_type, author_id, related_repository_id, deleted, event_id, temp_seq)
			SELECT
				time, date, 'unknown', changed_by, repository_id, false, event_id, temp_seq 
			FROM public.repository_event;
				
			INSERT INTO 
				public.changed_variable (changed_variable, value_before, value_after, newsfeed_event_id, deleted, temp_seq) 
			SELECT 
				changed_variable, value_before, value_after, 1, false, temp_seq 
			FROM public.repository_event;						
			
			INSERT INTO
				public.newsfeed_event(time, date, newsfeed_event_type, author_id, related_repositorymaintainer_id, deleted, event_id, temp_seq)
			SELECT
				time, date, 'unknown', changed_by, repository_maintainer_id, false, event_id, temp_seq 
			FROM public.repository_maintainer_event;
				
			INSERT INTO 
				public.changed_variable (changed_variable, value_before, value_after, newsfeed_event_id, deleted, temp_seq) 
			SELECT 
				changed_variable, value_before, value_after, 1, false, temp_seq 
			FROM public.repository_maintainer_event;						
			
			UPDATE
				public.changed_variable cv
			SET
				newsfeed_event_id = q.id
			FROM (
				SELECT
					e.id, e.temp_seq
				FROM public.newsfeed_event e
				JOIN public.changed_variable c ON e.temp_seq = c.temp_seq
				) as q
			WHERE cv.temp_seq = q.temp_seq;						
			
			UPDATE 
				public.newsfeed_event
			SET
				newsfeed_event_type = CASE
				WHEN event_id = 2 THEN 'DELETE'
				WHEN event_id = 3 THEN 'UPDATE'
				WHEN event_id = 1 AND related_package_id IS NULL THEN 'CREATE'
				ELSE 'UPLOAD'
			END;
			
			ALTER TABLE public.newsfeed_event DROP COLUMN event_id;
			ALTER TABLE public.newsfeed_event DROP COLUMN temp_seq;
			ALTER TABLE public.changed_variable DROP COLUMN temp_seq;
			
			DROP SEQUENCE temporal_sequence;
    	</sql>
    	<dropTable tableName="user_event"/>
    	<dropTable tableName="submission_event"/>
    	<dropTable tableName="package_event"/>
    	<dropTable tableName="package_maintainer_event"/>
    	<dropTable tableName="repository_event"/>
    	<dropTable tableName="repository_maintainer_event"/>
    	<dropTable tableName="event"/>
        <rollback/>
    </changeSet>                    
    
    <changeSet id="03_11_addForeignKeyConstraint_author_newsfeed_event" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
    			<foreignKeyConstraintExists foreignKeyName="author" schemaName="public" foreignKeyTableName="newsfeed_event"/>
    		</not>
    	</preConditions>
    	<addForeignKeyConstraint
    		constraintName="author"
    		baseColumnNames="author_id"              
            baseTableName="newsfeed_event"  
            baseTableSchemaName="public"
            onDelete="NO ACTION"  
            onUpdate="NO ACTION"                                  
            referencedColumnNames="id"    
            referencedTableName="user"  
            referencedTableSchemaName="public"/>            
    </changeSet>
    
    <changeSet id="03_12_addForeignKeyConstraint_related_packagemaintainer_newsfeed_event" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
    			<foreignKeyConstraintExists foreignKeyName="related_packagemaintainer" schemaName="public" foreignKeyTableName="newsfeed_event"/>
    		</not>
    	</preConditions>
    	<addForeignKeyConstraint
    		constraintName="related_packagemaintainer"
    		baseColumnNames="related_packagemaintainer_id"              
            baseTableName="newsfeed_event"  
            baseTableSchemaName="public"
            onDelete="NO ACTION"  
            onUpdate="NO ACTION"                                  
            referencedColumnNames="id"    
            referencedTableName="package_maintainer"  
            referencedTableSchemaName="public"/>            
    </changeSet>
    
    <changeSet id="03_13_addForeignKeyConstraint_related_repositorymaintainer_newsfeed_event" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
    			<foreignKeyConstraintExists foreignKeyName="related_repositorymaintainer" schemaName="public" foreignKeyTableName="newsfeed_event"/>
    		</not>
    	</preConditions>
    	<addForeignKeyConstraint
    		constraintName="related_repositorymaintainer"
    		baseColumnNames="related_repositorymaintainer_id"              
            baseTableName="newsfeed_event"  
            baseTableSchemaName="public"
            onDelete="NO ACTION"  
            onUpdate="NO ACTION"                                  
            referencedColumnNames="id"    
            referencedTableName="repository_maintainer"  
            referencedTableSchemaName="public"/>            
    </changeSet>
    
    <changeSet id="03_14_addForeignKeyConstraint_related_user_newsfeed_event" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
    			<foreignKeyConstraintExists foreignKeyName="related_user" schemaName="public" foreignKeyTableName="newsfeed_event"/>
    		</not>
    	</preConditions>
    	<addForeignKeyConstraint
    		constraintName="related_user"
    		baseColumnNames="related_user_id"              
            baseTableName="newsfeed_event"  
            baseTableSchemaName="public"
            onDelete="NO ACTION"  
            onUpdate="NO ACTION"                                  
            referencedColumnNames="id"    
            referencedTableName="user"  
            referencedTableSchemaName="public"/>            
    </changeSet>
    
    <changeSet id="03_15_addForeignKeyConstraint_related_submission_newsfeed_event" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
    			<foreignKeyConstraintExists foreignKeyName="related_submission" schemaName="public" foreignKeyTableName="newsfeed_event"/>
    		</not>
    	</preConditions>
    	<addForeignKeyConstraint
    		constraintName="related_submission"
    		baseColumnNames="related_submission_id"              
            baseTableName="newsfeed_event"  
            baseTableSchemaName="public"
            onDelete="NO ACTION"  
            onUpdate="NO ACTION"                                  
            referencedColumnNames="id"    
            referencedTableName="submission"  
            referencedTableSchemaName="public"/>            
    </changeSet>
    
    <changeSet id="03_16_addForeignKeyConstraint_related_repository_newsfeed_event" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
    			<foreignKeyConstraintExists foreignKeyName="related_repository" schemaName="public" foreignKeyTableName="newsfeed_event"/>
    		</not>
    	</preConditions>
    	<addForeignKeyConstraint
    		constraintName="related_repository"
    		baseColumnNames="related_repository_id"              
            baseTableName="newsfeed_event"  
            baseTableSchemaName="public"
            onDelete="NO ACTION"  
            onUpdate="NO ACTION"                                  
            referencedColumnNames="id"    
            referencedTableName="repository"  
            referencedTableSchemaName="public"/>            
    </changeSet>
    
    <changeSet id="03_17_addForeignKeyConstraint_related_package_newsfeed_event" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
    			<foreignKeyConstraintExists foreignKeyName="package_repository" schemaName="public" foreignKeyTableName="newsfeed_event"/>
    		</not>
    	</preConditions>
    	<addForeignKeyConstraint
    		constraintName="related_package"
    		baseColumnNames="related_package_id"              
            baseTableName="newsfeed_event"  
            baseTableSchemaName="public"
            onDelete="NO ACTION"  
            onUpdate="NO ACTION"                                  
            referencedColumnNames="id"    
            referencedTableName="package"  
            referencedTableSchemaName="public"/>            
    </changeSet>
    
    <changeSet id="03_18_addForeignKeyConstraint_newsfeed_event_changed_variable" author="pgleska">
    	<preConditions onFail="MARK_RAN">
    		<not>
    			<foreignKeyConstraintExists foreignKeyName="newsfeed_event" schemaName="public" foreignKeyTableName="changed_variable"/>
    		</not>
    	</preConditions>
    	<addForeignKeyConstraint
    		constraintName="newsfeed_event"
    		baseColumnNames="newsfeed_event_id"              
            baseTableName="changed_variable"  
            baseTableSchemaName="public"
            onDelete="CASCADE"  
            onUpdate="NO ACTION"                                  
            referencedColumnNames="id"    
            referencedTableName="newsfeed_event"  
            referencedTableSchemaName="public"/>            
    </changeSet>                   
</databaseChangeLog>