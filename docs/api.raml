#%RAML 1.0
title: RDepot
baseUri: http://localhost:8017/api/v2/manager
version: 2.0

uses:
  assets: assets.lib.raml

annotationTypes:
  monitoringInterval:
    type: integer

/packages:
  displayName: Packages
  get:
    description: Lists all packages of a given repository
    queryParameters:
      page:
        type: integer
      size:
        type: integer
        description: Page size
      repositoryName:
        type: string
        description: Repository name
      deleted:
        type: boolean
  /{packageId}:
    type: integer
    description: Package ID
    get:
      responses:
        200:
          body: application/json
          type: Package
        404:
        403:
        401:
        500:
    patch:
    delete:
    /manual:
      get:
        responses:
          200:
            body: application/pdf
            type: PDF
          404:
    /vignettes:
      get:
        response:
          200:
            body: application/json
            type: List
      /{vignetteName}.html:
        description: Vignette in HTML format
        get:
          responses:
            200:
              body: text/html
              type: html
            404:
      /{vignetteName}.pdf:
        description: Vignette in PDF format
        get:
          responses:
            200:
              body: application/pdf
              type: pdf
            404:

/package-maintainers:
  displayName: Package Maintainers
  description: User-Package name pairs representing maintainance relationship
  get:
    description: Lists all Package Maintainers
    queryParameters:
      page:
        type: integer
      size:
        type: integer
        description: Page size
      deleted:
        type: boolean
  post:
    body:
      application/json:
        example: |
          {
            "user": "userId123",
            "repository": "repositoryId123",
            "package": "package_name"
          }

  /{packageMaintainerId}:
    get:
      responses:
        200:
          body: application/json
          type: PackageMaintainer
        404:
    put:
    patch:
    delete:

/repository-maintainers:
  displayName: Repository Maintainers
  description: User-Repository name pairs representing maintainance relationship
  get:
    description: Lists all Repository Maintainers
    queryParameters:
      page:
        type: integer
      size:
        type: integer
        description: Page size
      deleted:
        type: boolean
  post:
    body:
      application/json:
        example: |
          {
            "user": "userId123",
            "repository": "repositoryId123"
          }
  /{repositoryMaintainerId}:
    get:
      responses:
        200:
          body: application/json
          type: RepositoryMaintainer
        404:
    put:
    patch:
    delete:

/repositories:
  displayName: Repositories
  description: Entities grouping the Packages together
  get:
    description: Lists all Repositories
    queryParameters:
      page:
        type: integer
      size:
        type: integer
        description: Page size
      deleted:
        type: boolean
  post:
    body:
      application/json:
        example: |
          {
            "name": "Test repository",
            "publicationUri": "http://localhost:8017/repo/testrepo1",
            "serverAddress": "http://oa-rdepot-repo:8017/testrepo1"
          }
  /{repositoryId}:
    description: Fetches a repository together with a list of contained packages
    get:
      responses:
        200:
          body: application/json
          type: Repository
        404:
    put:
    patch:
      body:
        application/json:
          example: |
            {
              "published": "false"
            }
    delete:
    /synchronization-status:
      description: Fetches mirroring status for a given Repository
      get:
        responses:
          200:
            body: application/json
              example: |
                {
                  "repositoryId": "123",
                  "pending": "false",
                  "timestamp": "2021-05-24 06:11:31",
                  "error": "Synchronization failed"
                }
            type: Synchronization Status
          404:

  /events:
    description: Lists the most recent events
    get:
      page:
        type: integer
      size:
        type: integer
        description: Page size
      lastEventId:
        type: integer
        description: Id of the oldest event that should be fetched

/submissions:
  description: Lists all submissions for a user
  get:
    page:
        type: integer
    size:
      type: integer
      description: Page size
    submitter:
      type: integer
      description: ID of a submitter whose submissions should be fetched
    deleted:
      type: boolean
  post:
    body:
      multipart/form-data:
        formParameters:
          file:
            description: package to upload
            type: file
          repository:
            description: Name of the repository where package should be uploaded to
            type: string
          generateManual:
            description: Flag which specifies if manual for the uploaded package should be generated
            type: boolean
            default: depends on the configuration
          replace:
            description: //Should we actually keep this flag?
            type: boolean
    response:
      201:
        body: application/json
      422:
  patch:
    body:
      application/json:
        example: |
          {
            "accepted": "true"
          }
  delete:
  put:

/users:
  displayName: Users
  get:
    page:
        type: integer
    size:
      type: integer
      description: Page size

  /{userId}:
    get:
      description: Fetches user of specific ID
      responses:
        200:
          body: application/json
          type: Repository
        404:
    patch:
      body:
        application/json:
          example: |
            {
              "role": "Repository Maintainer"
            }
      responses:
        200:
          body: application/json
        404:
